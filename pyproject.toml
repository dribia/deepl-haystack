[tool.poetry]
name = "deepl-haystack"
version = "0.2.2"
description = "Haystack integration with DeepL translation services provider."
authors = ["Albert Iribarne <iribarne@dribia.com>"]
maintainers = ["Albert Iribarne <iribarne@dribia.com>", "Dribia Data Research <code@dribia.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dribia/deepl-haystack"
homepage = "https://github.com/dribia/deepl-haystack"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["haystack", "deepl", "translation", "nlp"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/dribia/deepl-haystack/issues"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
deepl = "^1.19.1"
haystack-ai = "^2.0.0"
pytest-dotenv = "^0.5.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.0"
pytest-mock = "^3.14.1"
pytest-cov = "^6.2.1"

[tool.poetry.group.lint.dependencies]
ruff = "0.11.13"
mypy = "1.16.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"

[tool.ruff]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # convention
    "B",  # flake8-bugbear
    "D",  # pydocstyle
    "UP",  # pyupgrade
    "N",  # pep8-naming
    "NPY",  # numpy
    "PD",   # pandas
    "RUF",  # ruff
    "PTH",  # pathlib
    "SIM",  # simplify
    "RET",  # return
    "RSE",  # raise
    "Q",  # quotes
    "G",  # logging-format
    "LOG",  # logging
    "ISC",  # implicit str concat
    "C4",  # comprehensions
    "COM",  # commas
    "TD",  # to-do
    "INT",  # gettext
    "TRY",  # tryceratops
]
ignore = [
    "RUF013",  # implicit optional
    "ISC001",  # allow implicit str concat
    "COM812",  # allow missing trailing comma
    "TRY003",  # allow long messages outside the exception class
    "UP006",  # allow use of old typings
    "UP035",  # allow typing imports
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.lint.isort]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
plugins = []
strict_optional = true
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = [
    "haystack",
    "haystack.utils"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--verbose"
filterwarnings = 'error'
xfail_strict = true
testpaths = ["tests"]
markers = [
  "integration: integration tests",
]

[tool.coverage.run]
source = ["deepl_haystack"]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
